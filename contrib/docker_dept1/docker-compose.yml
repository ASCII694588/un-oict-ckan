# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:
  solr_data:

services:
  ckan:
    container_name: ckan_${CKAN_ENTITY_OWNER}
    build:
      context: ../../
    depends_on:
      db:
        condition: service_healthy
#      solr:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://${DATASTORE_READONLY_USER}:${DATASTORE_READONLY_PASSWORD}@${POSTGRES_HOST}/datastore
      - CKAN_SOLR_URL=http://solr:${SOLR_PORT}/solr/ckan
      - CKAN_REDIS_URL=redis://redis:${REDIS_PORT}/1
      - CKAN_DATAPUSHER_URL=http://datapusher:${DATAPUSHER_PORT}
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:${CKAN_PORT}/"]
    # Debug with pdb (example) - Interact with `docker attach $(docker container ls -qf name=ckan)`
    #command: 'python -m pdb /usr/lib/ckan/venv/bin/ckan --config /etc/ckan/production.ini run --host 0.0.0.0 --passthrough-errors'
    #tty: true
    #stdin_open: true

    volumes:
      - ckan_config:/etc/${CKAN_ENTITY_OWNER}
      - ckan_home:/usr/lib/${CKAN_ENTITY_OWNER}
      - ckan_storage:/var/lib/${CKAN_ENTITY_OWNER}

  datapusher:
    container_name: datapusher_${CKAN_ENTITY_OWNER}
    image: clementmouchet/datapusher
    ports:
      - "${DATAPUSHER_PORT}:8800"
    restart: unless-stopped

  db:
    container_name: ${POSTGRES_HOST}_${CKAN_ENTITY_OWNER}
    build:
      context: ../../
      dockerfile: contrib/docker/postgresql/Dockerfile  
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]
    restart: unless-stopped

  solr:
    container_name: solr_${CKAN_ENTITY_OWNER}
    build:
      context: ../../
      dockerfile: contrib/docker/solr/Dockerfile
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:${SOLR_PORT}/solr/"]

  redis:
    container_name: redis_${CKAN_ENTITY_OWNER}
    image: redis:6.2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
